Assignment6

Modified files:
	 shell/xsh_free.c 9.1
	 	print free memory block
	 Assignment_6.txt 9.4

	 system/userret.c 9.7
	 	print stack that process used when it exit

===============

Assignment5

Modified files:
	 apps/future_prod.c
	 apps/future_cons.c
	 include/future.h
	 shell/xsh_prodcons.c
	 system/future_alloc.c
	 system/future_get.c
	 system/future_free.c
	 system/future_set.c

	 implemented queue struct and 2 more flags for future

===============


Assignment4

Modified files:
	 apps/future_prod.c
	 apps/future_cons.c
	 include/future.h
	 shell/xsh_prodcons.c
	 system/future_alloc.c
	 system/future_get.c
	 system/future_free.c
	 system/future_set.c


===============

Assignment3:

Modified files:
	 shell/xsh_prodcons.c
	 include/prodcons.h
	 apps/producer.c
	 apps/consumer.c

Questions:
	1.Semaphore has 2 status, using(1) and free(0). Wait() function will block the current process and wait to the signal becomes to free. Signal() function will change the current status to free. So that, in this assignment, the main() function set the signal consumed to using(1) and produced to free(0) at begining. For next step, producer generate a number n and fire a signal to consumer, consumer will consume the number and send a signal to release the producer process.
	2.No.
===============

Assignment2:

Modified files:
	 shell/xsh_reset.c	Add reset command to shell
	 compile/Makefile	In order to compile .c files in apps/
	 shell/xsh_prodcons.c	Assignment2
	 shell/shell.c
	 include/shprototype.h
	 apps/comsumer.c
	 apps/producer.c

Questions:
	1. No, I don't think so. Producer generate number and this number will be assigned to global variable n, and Consumer read the global variable n.
	2. No. Producer and Consumer are not concurrent processes on my board.

